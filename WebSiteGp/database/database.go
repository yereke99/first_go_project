package main

import (
  "database/sql"
  "fmt"
  _ "github.com/lib/pq"
)
type User struct{
   Name string `json:"name"`
   Age uint16 `json:"age"`
}

func main(){
  connStr := "user=postgres password=123456 dbname=postgres sslmode=disable"
  db, err := sql.Open("postgres", connStr)
  if err != nil {
      panic(err)
  }
  defer db.Close()
  /*
  query := `CREATE TABLE Products (
            id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            name  varchar(10) NOT NULL,
            age integer NOT NULL
            )`
  result, err := db.Exec(query)
  if err != nil{
      panic(err)
  }
  */
  /*
  q := `insert into Products (name, age) values($1, $2)`
  insert, err := db.Exec(q, "yerek", 21)
  if err != nil {
      panic(err)
  }
  defer insert.Close()
  */
  //q := `select name, age from Products`
  /*
  res, err := db.Query("SELECT name, age FROM Products")
  if err != nil {
      panic(err)
  }

  for res.Next() {
    var user User
    err = res.Scan(&user.Name, &user.Age)
    if err != nil {
        panic(err)
    }
    fmt.Println(fmt.Sprintf("User name: %s with age: %s", user.Name, user.Age))
  }
  */
  /*query := ` CREATE TABLE Post(
                    id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                    title  varchar(50) NOT NULL,
                    anons  varchar(100) NOT NULL,
                    full_text  varchar(5000) NOT NULL
                    )`

  save, err := db.Exec(query)
   if err != nil {
       panic(err)
   }*/



  //fmt.Println(save.LastInsertId())  // не поддерживается
  //fmt.Println(save.RowsAffected())  // количество добавленных строк
}
